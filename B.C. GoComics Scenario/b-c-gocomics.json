{
  "schema_version": 1,
  "name": "B.C. - GoComics",
  "description": "No description provided",
  "source_url": false,
  "guid": "3cc9e139f69547961859d83fb9195d28",
  "tag_fg_color": "#ffffff",
  "tag_bg_color": "#5bc0de",
  "icon": "gear",
  "exported_at": "2020-04-09T16:24:15Z",
  "agents": [
    {
      "type": "Agents::WebsiteAgent",
      "name": "B.c. - GoComics Comic URL Scraper",
      "disabled": false,
      "guid": "11119d849b98fd86f81be1b5403f3d6e",
      "options": {
        "expected_update_period_in_days": "2",
        "url": "{{url}}",
        "type": "html",
        "mode": "on_change",
        "extract": {
          "img": {
            "css": ".item-comic-image > img:nth-child(1)",
            "value": "@src"
          },
          "hovertext": {
            "css": "h1.m-0",
            "value": "string(.)"
          }
        },
        "template": {
          "url": "https://www.gocomics.com/bc/{{urlpath}}",
          "pubDate": "{{hovertext | split: \"for \" | last | date: \"%Y-%m-%d %H:%M\"}}"
        }
      },
      "schedule": "never",
      "keep_events_for": 0,
      "propagate_immediately": true
    },
    {
      "type": "Agents::PhantomJsCloudAgent",
      "name": "B.C. GoComics Phantom Comic URL scraper",
      "disabled": false,
      "guid": "131bf6282c8190fc81f19cbf29b2a0f5",
      "options": {
        "mode": "merge",
        "api_key": "{% credential phantomjscloud_api_key %}",
        "url": "https://www.gocomics.com/bc/{{urlpath}}",
        "render_type": "html",
        "output_as_json_radio": "false",
        "output_as_json": "false",
        "ignore_images_radio": "false",
        "ignore_images": "false",
        "user_agent": "Mozilla/5.0 (BlackBerry; U; BlackBerry 9900; en) AppleWebKit/534.11+ (KHTML, like Gecko) Version/7.1.0.346 Mobile Safari/534.11+",
        "wait_interval": "1000"
      },
      "schedule": "never",
      "keep_events_for": 0,
      "propagate_immediately": true
    },
    {
      "type": "Agents::WebsiteAgent",
      "name": "B.C. GoComics Fetch Date Range",
      "disabled": false,
      "guid": "263d6ebea9e16407f2f70ca270c3e0de",
      "options": {
        "expected_update_period_in_days": "2",
        "url": "https://www.gocomics.com/bc",
        "type": "html",
        "mode": "all",
        "extract": {
          "start_date": {
            "css": "body > div.js-amu-container-global > div.gc-page-container > div.gc-container.gc-container--fluid > div > div.layout-2col-content.content-section-padded > div.row > div.gc-deck.gc-deck--cta-1 > a",
            "value": "@href"
          },
          "end_date": {
            "css": "body > div.js-amu-container-global > div.gc-page-container > div.gc-container.gc-container--fluid > div > div.layout-2col-content.content-section-padded > div.row > div.gc-deck.gc-deck--cta-0 > a",
            "value": "@href"
          }
        },
        "template": {
          "start_date": "{{start_date | split: \"/bc/\" | last}}",
          "end_date": "{{end_date | split: \"/bc/\" | last}}",
          "start_year": "{{start_date | split: \"/bc/\" | last | date: \"%Y\"}}",
          "end_year": "{{end_date | split: \"/bc/\" | last | date: \"%Y\"}}",
          "start_month": "{{start_date | split: \"/bc/\" | last | date: \"%m\"}}",
          "end_month": "{{end_date | split: \"/bc/\" | last | date: \"%m\"}}",
          "start_day": "{{start_date | split: \"/bc/\" | last | date: \"%d\"}}",
          "end_day": "{{end_date | split: \"/bc/\" | last | date: \"%d\"}}"
        }
      },
      "schedule": "every_30m",
      "keep_events_for": 0,
      "propagate_immediately": true
    },
    {
      "type": "Agents::DataOutputAgent",
      "name": "B.C. - GoComics RSS Output",
      "disabled": false,
      "guid": "483d849a8e4723085fe2819672de1c23",
      "options": {
        "secrets": [
          "rssfeed"
        ],
        "expected_receive_period_in_days": 2,
        "template": {
          "title": "BC comics as a feed",
          "description": "This is a feed of recent BC comics, generated by Huginn",
          "item": {
            "title": "{{hovertext | split: \" for\" | first}} | {{ pubDate | date: \"%a, %b %d, %Y\" }}",
            "description": "<img src=\"{{img}}\"; style=\"max-width: 350px; float:left \">{{hovertext}}",
            "link": "{{url}}",
            "pubDate": "{{pubDate}}"
          },
          "link": "https://www.gocomics.com/"
        },
        "ns_media": "true"
      },
      "propagate_immediately": true
    },
    {
      "type": "Agents::JavaScriptAgent",
      "name": "B.C. - GoComics Backfill Range Event Producer",
      "disabled": false,
      "guid": "4e39aefcc82b243b8a26d677a4131523",
      "options": {
        "language": "JavaScript",
        "code": "function get_dates_between(payload){\r\n  dateslist = []\r\n  \r\n  var start_date_year = payload['start_year']\r\n  var start_date_month = payload['start_month']\r\n  var start_date_day = payload['start_day']\r\n  var startDate = new Date(start_date_year, start_date_month, start_date_day)\r\n  \r\n  var end_date_year = payload['end_year']\r\n  var end_date_month = payload['end_month']\r\n  var end_date_day = payload['end_day']\r\n  var endDate = new Date(end_date_year, end_date_month, end_date_day)\r\n  \r\n  var startYear = startDate.getFullYear();\r\n  var endYear = endDate.getFullYear();\r\n  for(var indexyear=startYear;indexyear<=endYear;indexyear++){\r\n    \r\n    if (startYear == endYear) {\r\n      var startMonth = startDate.getMonth();\r\n      var endMonth = endDate.getMonth();\r\n    } else if (indexyear == startYear) {\r\n      var startMonth = startDate.getMonth();\r\n      var endMonth = 12\r\n    } else if (indexyear == endYear) {\r\n      var startMonth = 1\r\n      var endMonth = endDate.getMonth();\r\n    } else {\r\n      var startMonth = 1\r\n      var endMonth = 12\r\n    }\r\n    for(var indexmonth=startMonth;indexmonth<=endMonth;indexmonth++){\r\n      \r\n      indexDateEnd = new Date(indexyear, indexmonth, 0).getDate()\r\n      \r\n      if (startYear == endYear) {\r\n        if (startMonth == endMonth) {\r\n          var startDay = startDate.getDate();\r\n          var endDay = endDate.getDate();\r\n        } else if (indexmonth == startMonth) {\r\n          var startDay = startDate.getDate();\r\n          var endDay = indexDateEnd\r\n        } else if (indexmonth == endMonth) {\r\n          var startDay = 1\r\n          var endDay = endDate.getDate();\r\n        } else {\r\n          var startDay = 1\r\n          var endDay = indexDateEnd\r\n        }\r\n      } else if (indexyear == startYear) {\r\n        if (indexmonth == startMonth) {\r\n          var startDay = startDate.getDate();\r\n          var endDay = indexDateEnd\r\n        } else {\r\n          var startDay = 1\r\n          var endDay = indexDateEnd\r\n        }\r\n      } else if (indexyear == endYear) {\r\n        if (indexmonth == endMonth) {\r\n          var startDay = 1\r\n          var endDay = endDate.getDate();\r\n        } else {\r\n          var startDay = 1\r\n          var endDay = indexDateEnd\r\n        }\r\n      } else {\r\n        var startDay = 1\r\n        var endDay = indexDateEnd\r\n      }\r\n    \r\n      for(var indexDay=startDay;indexDay<=endDay;indexDay++){\r\n        dateslist.push((indexyear).toString() + \"/\" + (indexmonth).toString() + \"/\" + (indexDay).toString())\r\n      }\r\n    }\r\n  }\r\n  return dateslist;\r\n}\r\n\r\nfunction filterdates(dateslist, backfilled){\r\n  newdateslist = []\r\n  for (dateindex = 0; dateindex < dateslist.length; dateindex++) {\r\n    if(!(backfilled.includes(dateslist[dateindex]))){\r\n      newdateslist.push(dateslist[dateindex])\r\n    }\r\n  }\r\n  return newdateslist;\r\n}\r\n\r\n\r\nAgent.receive = function() {\r\n  var events = this.incomingEvents();\r\n  for(var i = 0; i < events.length; i++) {\r\n    \r\n    var start_date_year = events[i].payload['start_year']\r\n    var backfilled = this.memory('backfilled') || [];\r\n    \r\n    var dateslist = get_dates_between(events[i].payload)\r\n    var dateslist = filterdates(dateslist, backfilled)\r\n    dateslist.reverse()\r\n    var payloadcount = 0\r\n    for (dateindex = 0; dateindex < dateslist.length; dateindex++) {\r\n      var payload = events[i].payload\r\n      if(payloadcount <= 1){\r\n        payloadcount += 1\r\n        payload['urlpath'] = dateslist[dateindex]\r\n        backfilled.push(dateslist[dateindex])\r\n        this.memory('backfilled', backfilled);\r\n        payload['backfill_complete'] = 0\r\n        this.createEvent(payload);\r\n      }\r\n    }\r\n    if (!(payloadcount >= 1)){this.createEvent({'backfill_complete':1})}\r\n  }\r\n}",
        "expected_receive_period_in_days": "2",
        "expected_update_period_in_days": "2"
      },
      "schedule": "never",
      "keep_events_for": 0,
      "propagate_immediately": true
    },
    {
      "type": "Agents::DeDuplicationAgent",
      "name": "B.C. DeDupe Agent",
      "disabled": false,
      "guid": "5e093d794da912799051e4657283c4e9",
      "options": {
        "property": "{{url}}",
        "lookback": "1000",
        "expected_update_period_in_days": "1"
      },
      "keep_events_for": 0,
      "propagate_immediately": true
    },
    {
      "type": "Agents::WebsiteAgent",
      "name": "B.c. - GoComics Comic URL Scraper Daily",
      "disabled": false,
      "guid": "7421cc49ba81eff1318cb37594629eab",
      "options": {
        "expected_update_period_in_days": "2",
        "url": "https://www.gocomics.com/bc/{{urlpath}}",
        "type": "html",
        "mode": "on_change",
        "extract": {
          "img": {
            "css": ".item-comic-image > img:nth-child(1)",
            "value": "@src"
          },
          "hovertext": {
            "css": "h1.m-0",
            "value": "string(.)"
          }
        },
        "template": {
          "url": "https://www.gocomics.com/bc/{{urlpath}}",
          "pubDate": "{{hovertext | split: \"for \" | last | date: \"%Y-%m-%d %H:%M\"}}"
        }
      },
      "schedule": "never",
      "keep_events_for": 0,
      "propagate_immediately": true
    },
    {
      "type": "Agents::CommanderAgent",
      "name": "B.C. Backfill Commander",
      "disabled": false,
      "guid": "75c6780c248ac10c8aa5e7f6bcd96871",
      "options": {
        "action": "{% if backfill_complete == 0 %}enable{% else %}disable{% endif %}"
      },
      "schedule": "never",
      "propagate_immediately": true
    },
    {
      "type": "Agents::WebsiteAgent",
      "name": "B.C. - GoComics Daily Link Scraper",
      "disabled": false,
      "guid": "cb63a616ec3e0ee2eceaeaadd2207704",
      "options": {
        "expected_update_period_in_days": "2",
        "url": "https://www.gocomics.com/bc",
        "type": "html",
        "mode": "on_change",
        "extract": {
          "urlpath": {
            "css": "body > div.js-amu-container-global > div.gc-page-container > div.gc-container.gc-container--fluid > div > div.layout-2col-content.content-section-padded > nav > ul > li:nth-child(2) > a",
            "value": "@href"
          }
        },
        "template": {
          "urlpath": "{{urlpath | split: \"/bc/\" | lastl}}"
        }
      },
      "schedule": "never",
      "keep_events_for": 0,
      "propagate_immediately": true
    }
  ],
  "links": [
    {
      "source": 0,
      "receiver": 5
    },
    {
      "source": 1,
      "receiver": 0
    },
    {
      "source": 2,
      "receiver": 4
    },
    {
      "source": 4,
      "receiver": 1
    },
    {
      "source": 4,
      "receiver": 7
    },
    {
      "source": 5,
      "receiver": 3
    },
    {
      "source": 6,
      "receiver": 5
    },
    {
      "source": 8,
      "receiver": 6
    }
  ],
  "control_links": [
    {
      "controller": 7,
      "control_target": 2
    }
  ]
}